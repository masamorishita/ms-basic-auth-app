{"ast":null,"code":"var _jsxFileName = \"/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const signInWithMicrosoft = async () => {\n    try {\n      setLoading(true);\n      await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          skipBrowserRedirect: false,\n          redirectTo: 'http://localhost:3000',\n          queryParams: {\n            response_type: 'code',\n            response_mode: 'query'\n          }\n        }\n      });\n    } catch (error) {\n      console.error('Auth error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithMicrosoft,\n      className: \"login-button\",\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Sign in with Microsoft'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","App","_s","loading","setLoading","signInWithMicrosoft","signInWithOAuth","provider","options","skipBrowserRedirect","redirectTo","queryParams","response_type","response_mode","error","console","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\n\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n\n  const signInWithMicrosoft = async () => {\n    try {\n      setLoading(true);\n      \n      await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          skipBrowserRedirect: false,\n          redirectTo: 'http://localhost:3000',\n          queryParams: {\n            response_type: 'code',\n            response_mode: 'query'\n          }\n        }\n      });\n      \n    } catch (error) {\n      console.error('Auth error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button \n        onClick={signInWithMicrosoft} \n        className=\"login-button\"\n        disabled={loading}\n      >\n        {loading ? 'Loading...' : 'Sign in with Microsoft'}\n      </button>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,kNAAkN,CAAC,CAAC;;AAE5O,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,eAAe,EAAE;EAC1DE,IAAI,EAAE;IACJC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE,IAAI;IACpBC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMR,QAAQ,CAACC,IAAI,CAACS,eAAe,CAAC;QAClCC,QAAQ,EAAE,OAAO;QACjBC,OAAO,EAAE;UACPC,mBAAmB,EAAE,KAAK;UAC1BC,UAAU,EAAE,uBAAuB;UACnCC,WAAW,EAAE;YACXC,aAAa,EAAE,MAAM;YACrBC,aAAa,EAAE;UACjB;QACF;MACF,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACrC,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MACEyB,OAAO,EAAEb,mBAAoB;MAC7BW,SAAS,EAAC,cAAc;MACxBG,QAAQ,EAAEhB,OAAQ;MAAAc,QAAA,EAEjBd,OAAO,GAAG,YAAY,GAAG;IAAwB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CArCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}