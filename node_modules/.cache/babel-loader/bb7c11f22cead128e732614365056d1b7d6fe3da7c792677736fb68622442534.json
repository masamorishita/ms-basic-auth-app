{"ast":null,"code":"var _jsxFileName = \"/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\n// Initialize Supabase with implicit flow\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\nfunction App() {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const signInWithMicrosoft = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const {\n        data,\n        error: authError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          skipBrowserRedirect: false,\n          redirectTo: window.location.origin,\n          queryParams: {\n            response_type: 'token id_token',\n            response_mode: 'fragment'\n          }\n        }\n      });\n      if (authError) throw authError;\n      console.log('Auth response:', data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Auth error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithMicrosoft,\n      className: \"login-button\",\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Sign in with Microsoft'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rEc7l+pXbieyWSk0M8PP+QokfWo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","App","_s","error","setError","loading","setLoading","signInWithMicrosoft","data","authError","signInWithOAuth","provider","options","skipBrowserRedirect","redirectTo","window","location","origin","queryParams","response_type","response_mode","console","log","err","message","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\n\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\n// Initialize Supabase with implicit flow\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const signInWithMicrosoft = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const { data, error: authError } = await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          skipBrowserRedirect: false,\n          redirectTo: window.location.origin,\n          queryParams: {\n            response_type: 'token id_token',\n            response_mode: 'fragment'\n          }\n        }\n      });\n\n      if (authError) throw authError;\n      console.log('Auth response:', data);\n\n    } catch (err) {\n      setError(err.message);\n      console.error('Auth error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <button \n        onClick={signInWithMicrosoft} \n        className=\"login-button\"\n        disabled={loading}\n      >\n        {loading ? 'Loading...' : 'Sign in with Microsoft'}\n      </button>\n      \n      {error && (\n        <div className=\"error-message\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,kNAAkN,CAAC,CAAC;;AAE5O;AACA,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,eAAe,EAAE;EAC1DE,IAAI,EAAE;IACJC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE,IAAI;IACpBC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMiB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChBF,QAAQ,CAAC,IAAI,CAAC;MAEd,MAAM;QAAEI,IAAI;QAAEL,KAAK,EAAEM;MAAU,CAAC,GAAG,MAAMb,QAAQ,CAACC,IAAI,CAACa,eAAe,CAAC;QACrEC,QAAQ,EAAE,OAAO;QACjBC,OAAO,EAAE;UACPC,mBAAmB,EAAE,KAAK;UAC1BC,UAAU,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM;UAClCC,WAAW,EAAE;YACXC,aAAa,EAAE,gBAAgB;YAC/BC,aAAa,EAAE;UACjB;QACF;MACF,CAAC,CAAC;MAEF,IAAIX,SAAS,EAAE,MAAMA,SAAS;MAC9BY,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEd,IAAI,CAAC;IAErC,CAAC,CAAC,OAAOe,GAAG,EAAE;MACZnB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAAC;MACrBH,OAAO,CAAClB,KAAK,CAAC,aAAa,EAAEoB,GAAG,CAAC;IACnC,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEb,OAAA;IAAKgC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjC,OAAA;MACEkC,OAAO,EAAEpB,mBAAoB;MAC7BkB,SAAS,EAAC,cAAc;MACxBG,QAAQ,EAAEvB,OAAQ;MAAAqB,QAAA,EAEjBrB,OAAO,GAAG,YAAY,GAAG;IAAwB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAER7B,KAAK,iBACJV,OAAA;MAAKgC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BvB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CAjDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}