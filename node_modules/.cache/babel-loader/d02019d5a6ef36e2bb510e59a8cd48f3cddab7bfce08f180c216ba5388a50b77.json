{"ast":null,"code":"var _jsxFileName = \"/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\nfunction App() {\n  _s();\n  const [error, setError] = useState(null);\n  const signInWithMicrosoft = async () => {\n    try {\n      setError(null);\n      const {\n        data,\n        error: authError\n      } = await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          redirectTo: 'http://localhost:3000',\n          scopes: 'email openid profile'\n        }\n      });\n      if (authError) {\n        throw new Error(`Authentication Error: ${authError.message}`);\n      }\n      console.log('Auth response:', data);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error details:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signInWithMicrosoft,\n        className: \"login-button\",\n        children: \"Sign in with Microsoft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setError(null),\n          className: \"clear-error-button\",\n          children: \"Clear Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A8i/78Fx3FIozbyR2zwnz0NK35o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createClient","jsxDEV","_jsxDEV","supabaseUrl","supabaseAnonKey","supabase","auth","autoRefreshToken","persistSession","detectSessionInUrl","App","_s","error","setError","signInWithMicrosoft","data","authError","signInWithOAuth","provider","options","redirectTo","scopes","Error","message","console","log","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/masam/Development/WordAddIn/test-attempt-05/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport './App.css';\n\nconst supabaseUrl = 'https://ilhpnfuxslmnmafyfkjm.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlsaHBuZnV4c2xtbm1hZnlma2ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzI4NDAxMzYsImV4cCI6MjA0ODQxNjEzNn0.XkHj-525jePRxoOAsbrAlMhmfc1qaYMtD0iP2PelKJI'; // Replace with your actual anon key\n\nconst supabase = createClient(supabaseUrl, supabaseAnonKey, {\n  auth: {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true\n  }\n});\n\nfunction App() {\n  const [error, setError] = useState(null);\n\n  const signInWithMicrosoft = async () => {\n    try {\n      setError(null);\n      const { data, error: authError } = await supabase.auth.signInWithOAuth({\n        provider: 'azure',\n        options: {\n          redirectTo: 'http://localhost:3000',\n          scopes: 'email openid profile'\n        }\n      });\n      \n      if (authError) {\n        throw new Error(`Authentication Error: ${authError.message}`);\n      }\n      \n      console.log('Auth response:', data);\n      \n    } catch (err) {\n      setError(err.message);\n      console.error('Error details:', err);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"auth-container\">\n        <button \n          onClick={signInWithMicrosoft} \n          className=\"login-button\"\n        >\n          Sign in with Microsoft\n        </button>\n        \n        {error && (\n          <div className=\"error-display\">\n            <p className=\"error-message\">{error}</p>\n            <button \n              onClick={() => setError(null)}\n              className=\"clear-error-button\"\n            >\n              Clear Error\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,eAAe,GAAG,kNAAkN,CAAC,CAAC;;AAE5O,MAAMC,QAAQ,GAAGL,YAAY,CAACG,WAAW,EAAEC,eAAe,EAAE;EAC1DE,IAAI,EAAE;IACJC,gBAAgB,EAAE,IAAI;IACtBC,cAAc,EAAE,IAAI;IACpBC,kBAAkB,EAAE;EACtB;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACFD,QAAQ,CAAC,IAAI,CAAC;MACd,MAAM;QAAEE,IAAI;QAAEH,KAAK,EAAEI;MAAU,CAAC,GAAG,MAAMX,QAAQ,CAACC,IAAI,CAACW,eAAe,CAAC;QACrEC,QAAQ,EAAE,OAAO;QACjBC,OAAO,EAAE;UACPC,UAAU,EAAE,uBAAuB;UACnCC,MAAM,EAAE;QACV;MACF,CAAC,CAAC;MAEF,IAAIL,SAAS,EAAE;QACb,MAAM,IAAIM,KAAK,CAAC,yBAAyBN,SAAS,CAACO,OAAO,EAAE,CAAC;MAC/D;MAEAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEV,IAAI,CAAC;IAErC,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZb,QAAQ,CAACa,GAAG,CAACH,OAAO,CAAC;MACrBC,OAAO,CAACZ,KAAK,CAAC,gBAAgB,EAAEc,GAAG,CAAC;IACtC;EACF,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB1B,OAAA;MAAKyB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B1B,OAAA;QACE2B,OAAO,EAAEf,mBAAoB;QAC7Ba,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERrB,KAAK,iBACJV,OAAA;QAAKyB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5B1B,OAAA;UAAGyB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEhB;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxC/B,OAAA;UACE2B,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAAC,IAAI,CAAE;UAC9Bc,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAC/B;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAlDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}